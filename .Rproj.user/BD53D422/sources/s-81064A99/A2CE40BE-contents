library(shiny)
library(shinythemes)
library(shinydashboard)
library(shinyWidgets)
library(dplyr)
library(tidyr)
library(ggplot2)
library(IDEATools)
library(stringr)
library(ggiraph)
library(shinycssloaders)
library(Cairo)
library(shinyjs)
library(readr)
library(DT)
library(openxlsx)

replace_col <- function(resultat) {
  res <- dplyr::case_when(
    resultat == "NC" ~ "grey",
    resultat == "favorable" ~ "lime",
    resultat == "très favorable" ~ "green",
    resultat == "défavorable" ~ "red",
    resultat == "très défavorable" ~ "maroon",
    resultat == "intermédiaire" ~ "orange"
  )
  return(res)
}



#' Generate polarised plots for components
#'
#' @param IDEAdata output generated by an `importIDEA()` call
#'
#' @return a named list of plots
#' @importFrom magrittr %>%
#' @importFrom dplyr mutate case_when arrange desc inner_join filter select rowwise ungroup group_by
#' @importFrom ggplot2 ggplot aes geom_rect geom_col theme_bw geom_text scale_fill_manual theme element_blank element_text scale_y_continuous labs coord_polar geom_vline xlim
#' @importFrom ggpubr ggtexttable ttheme colnames_style rownames_style tbody_style ggarrange
#' @importFrom glue glue
#' @importFrom purrr map
#' @importFrom readr parse_number
#' @importFrom stringr str_remove_all
#' @importFrom tidyr nest
#' @importFrom tibble tribble
#' @importFrom ggimage geom_image
PolarComponent <- function(IDEAdata, dir) {
  
  
  # PDF temporaire
  temp_pdf <- file.path(dir,"plot.pdf")  
  
  
  singleplots <- function(dataset) {
    
    component_data <- dataset %>% distinct(composante,dimension,composante_value) %>%
      inner_join(list_max_compo, by = "composante") %>%
      mutate(score = round(composante_value/max_compo*100)) %>%
      mutate(composante = factor(composante, levels = unique(list_max_compo$composante))) %>%
      mutate(dimension = factor(dimension, levels = c("Agroécologique","Socio-Territoriale","Economique"))) %>%
      select(variable = composante, performance = dimension, value = score) %>% 
      mutate(variable = factor(variable, levels = unique(variable)))
    
    
    
    ## Premier plot : Le radar qui est exporté en pdf
    ggplot(component_data, aes(x = variable, y = value, fill = performance)) +
      geom_rect(xmin = 0, xmax = 13, ymin = -3, ymax = 0, fill = "black") +
      geom_col(color = "black", width = 1) +
      geom_vline(xintercept = c(seq(0.5,13.5,1)), color = "black") +
      geom_hline(yintercept = c(0,20,40,60,80,100), color = "black") +
      geom_label(x = 0.5, y = 20, label = "20%", size = 5,inherit.aes = FALSE) +
      geom_label(x = 0.5, y = 40, label = "40%", size = 5,inherit.aes = FALSE) +
      geom_label(x = 0.5, y = 60, label = "60%", size = 5,inherit.aes = FALSE) +
      geom_label(x = 0.5, y = 80, label = "80%", size = 5,inherit.aes = FALSE) +
      scale_fill_manual(values = c("Agroécologique"="#2e9c15","Socio-Territoriale"="#5077FE", "Economique"="#FE962B")) +
      coord_polar() +
      ylim(-3,100) +
      theme(panel.background = element_blank(),
            panel.border = element_blank(),
            axis.text = element_blank(),
            axis.ticks = element_blank(),
            axis.title = element_blank()) +
      guides(fill = FALSE) +
      ggsave(temp_pdf, dpi = "retina",width = 10.1, height = 7.53)
    
    
    ## Préparation du donut
    donut_data <- data.frame(
      category=c("Agroécologique", "Socio-Territoriale", "Economique"),
      count=c(38.46, 30.7, 30.7)
    )
    donut_data$fraction = donut_data$count / sum(donut_data$count)
    donut_data$ymax = cumsum(donut_data$fraction)
    donut_data$ymin = c(0, head(donut_data$ymax, n=-1))
    
    
    path_tab <- tibble::tribble(
      ~composante, ~chemin,
      "Diversité fonctionnelle", "img/picto_div.png",
      "Bouclage de flux \nde matières et d'énergie \npar une recherche d'autonomie", "img/picto_flux.png",
      "Sobriété dans l'utilisation des ressources", "img/picto_ressources.png",
      "Assurer des conditions favorables à la production à moyen et long terme", "img/picto_production.png",
      "Réduire les impacts sur la santé humaine et les écosystèmes", "img/picto_sante.png",
      "Alimentation", "img/picto_alimentation.png",
      "Développement local \net économie circulaire", "img/picto_circulaire.png",
      "Emploi et qualité au travail", "img/picto_emploi.png",
      "Ethique et développement humain", "img/picto_ethique.png",
      "Viabilité économique et financière", "img/picto_economique.png",
      "Indépendance", "img/picto_independance.png",
      "Transmissibilité", "img/picto_transmissibilite.png",
      "Efficience globale", "img/picto_efficience.png"
    ) %>%
      rowwise() %>%
      mutate(chemin = file.path("www",chemin)) %>%
      ungroup()
    
    
    path_data <- component_data %>% mutate(ordre = 1:13) %>% inner_join(path_tab, by = c("variable"="composante")) %>% arrange(ordre)
    
    
    # Make the plot
    p <- ggplot(donut_data, aes(ymax=ymax, ymin=ymin, xmax=3.45, xmin=3, label = category)) +
      geom_image(aes(x = 2.0,y = 1),image = temp_pdf, size = I(0.46)) +
      geom_rect(aes(fill=category), color = "black", alpha = 0.6) +
      geom_image(aes(x = 3.35, y = 0.1823), image = file.path("www","img/TEXT_AE.png"),size = I(0.13), color = "#2e9c15") +
      geom_image(aes(x = 3.45, y = 0.5431), image = file.path("www","img/TEXT_ST.png"),size = I(0.27), color = "#5077FE") +
      geom_image(aes(x = 3.45, y = 0.8451), image = file.path("www","img/TEXT_ECO.png"),size = I(0.15), color = "#FE962B") +
      
      geom_image(aes(x = 3.225, y = 0.15/4), image = path_data$chemin[1],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.23/4*2), image = path_data$chemin[2],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.19), image = path_data$chemin[3],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.27), image = path_data$chemin[4],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.34), image = path_data$chemin[5],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.42), image = path_data$chemin[6],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.499), image = path_data$chemin[7],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.575), image = path_data$chemin[8],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.66), image = path_data$chemin[9],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.735), image = path_data$chemin[10],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.805), image = path_data$chemin[11],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.885), image = path_data$chemin[12],size = I(0.05)) +
      geom_image(aes(x = 3.225, y = 0.965), image = path_data$chemin[13],size = I(0.05)) +
      coord_polar(theta="y") +
      scale_fill_manual(values = c("Agroécologique"="#2e9c15","Socio-Territoriale"="#5077FE", "Economique"="#FE962B")) +
      ggplot2::xlim(c(2, 4.9)) +
      ggplot2::theme_void() +
      guides(fill = FALSE)
    
    return(p)
    
    
  }
  
  
  if (IDEAdata$input.type == "single") {
    dataset <- IDEAdata$dataset
    return_plot <- list()
    nom <- unique(dataset$id_exploit)
    return_plot[[nom]] <- singleplots(dataset)
  }
  
  if (IDEAdata$input.type == "folder") {
    dataset <- IDEAdata$dataset %>%
      dplyr::group_by(id_exploit) %>%
      tidyr::nest()
    
    return_plot <- purrr::map(dataset$data, singleplots)
    names(return_plot) <- dataset$id_exploit
  }
  
  return_plot$input.type <- IDEAdata$input.type
  return_plot$plot.type <- "PolarComponent"
  return(return_plot)
  
  
  
  
  
  
  
  
  
  
  
  
  
  
}


















replace_indicateur <- function(indicateur) {
  res <- dplyr::case_when(
    indicateur %in% liste_indicateurs ~ indicateur,
    indicateur == "Diversité de l'organisation spatiale et temporelle" ~ "R1",
    indicateur == "Limiter l'exposition aux aléas" ~ "R2",
    indicateur == "Diversité des activités" ~ "R3",
    indicateur == "En favorisant la diversité" ~ "R4",
    indicateur == "De l'outil de production" ~ "R5",
    indicateur == "En développant l'inertie et les capacités tampon" ~ "R6",
    indicateur == "Réduire la sensibilité" ~ "R7",
    indicateur == "par l'insertion dans les réseaux" ~ "R8",
    indicateur == "Augmenter la capacité d'adaptation" ~ "R9",
    indicateur == "Robustesse" ~ "R10",
    
    indicateur == "Naturelles" ~ "CP1",
    indicateur == "Travail" ~ "CP2",
    indicateur == "Compétences et équipements" ~ "CP3",
    indicateur == "Sociales et humaines" ~ "CP4",
    indicateur == "Préserver ou créer des ressources pour l'acte de production" ~ "CP5",
    indicateur == "Développer la capacité alimentaire" ~ "CP6",
    indicateur == "Capacité à produire dans le temps des biens et services remunérés" ~ "CP7",
    indicateur == "Capacité de remboursement" ~ "CP8",
    indicateur == "Capacité à dégager un revenu dans le temps" ~ "CP9",
    indicateur == "Capacité productive et reproductive de biens et de services" ~ "CP10",
    
    indicateur == "Liberté de décision organisationnelle" ~ "AU1",
    indicateur == "Liberté de décision dans les relations commerciales" ~ "AU2",
    indicateur == "Disposer d'une liberté de décision dans ses choix de gouvernance et de production" ~ "AU3",
    indicateur == "Disposer d'une autonomie financière" ~ "AU4",
    indicateur == "Autonomie dans le processus productif" ~ "AU5",
    indicateur == "Autonomie" ~ "AU6",
    
    indicateur == "Partage et transparence des activités productives" ~ "RG1",
    indicateur == "Ouverture et relation au monde non agricole" ~ "RG2",
    indicateur == "Sécurité alimentaire" ~ "RG3",
    indicateur == "Implications et engagements sociaux" ~ "RG4",
    indicateur == "Ressources naturelles" ~ "RG5",
    indicateur == "Ressources énergétiques et manufacturées" ~ "RG6",
    indicateur == "Partager équitablement les ressources" ~ "RG7",
    indicateur == "Conditions de travail de la main d'oeuvre " ~ "RG8",
    indicateur == "Conditions de travail de la main d'oeuvre" ~ "RG8",
    indicateur == "Conditions de vie et de travail" ~ "RG9",
    indicateur == "Bien être de la vie animale" ~ "RG10",
    indicateur == "Contribuer à la qualité de vie sur l'exploitation" ~ "RG11",
    indicateur == "Réduire les émissions" ~ "RG12",
    indicateur == "Réduire l'usage des produits polluants" ~ "RG13",
    indicateur == "Réduire ses impacts sur la santé et les écosystèmes" ~ "RG14",
    indicateur == "Responsabilité globale" ~ "RG15",
    
    indicateur == "Valoriser la qualité territoriale" ~ "AN1",
    indicateur == "Contribuer à des démarches d'économie circulaire" ~ "AN2",
    indicateur == "Par le travail et l'emploi" ~ "AN3",
    indicateur == "S'inscrire dans des démarches de territoire" ~ "AN4",
    indicateur == "Ancrage territorial" ~ "AN5"
  )
  
  
  return(res)
}
